define(['dart_sdk'], (function load__packages__fooderlich__models__explore_recipe_dart(dart_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const _interceptors = dart_sdk._interceptors;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  var explore_recipe = Object.create(dart.library);
  var $_get = dartx._get;
  var $add = dartx.add;
  dart._checkModuleNullSafetyMode(false);
  var T = {
    StringL: () => (T.StringL = dart.constFn(dart.legacy(core.String)))(),
    intL: () => (T.intL = dart.constFn(dart.legacy(core.int)))(),
    ListOfStringL: () => (T.ListOfStringL = dart.constFn(core.List$(T.StringL())))(),
    ListLOfStringL: () => (T.ListLOfStringL = dart.constFn(dart.legacy(T.ListOfStringL())))(),
    IngredientsL: () => (T.IngredientsL = dart.constFn(dart.legacy(explore_recipe.Ingredients)))(),
    JSArrayOfIngredientsL: () => (T.JSArrayOfIngredientsL = dart.constFn(_interceptors.JSArray$(T.IngredientsL())))(),
    MapOfStringL$dynamic: () => (T.MapOfStringL$dynamic = dart.constFn(core.Map$(T.StringL(), dart.dynamic)))(),
    MapLOfStringL$dynamic: () => (T.MapLOfStringL$dynamic = dart.constFn(dart.legacy(T.MapOfStringL$dynamic())))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    InstructionL: () => (T.InstructionL = dart.constFn(dart.legacy(explore_recipe.Instruction)))(),
    JSArrayOfInstructionL: () => (T.JSArrayOfInstructionL = dart.constFn(_interceptors.JSArray$(T.InstructionL())))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = ["package:fooderlich/models/explore_recipe.dart"];
  explore_recipe.RecipeCardType = class RecipeCardType extends core.Object {};
  (explore_recipe.RecipeCardType.new = function() {
    ;
  }).prototype = explore_recipe.RecipeCardType.prototype;
  dart.addTypeTests(explore_recipe.RecipeCardType);
  dart.addTypeCaches(explore_recipe.RecipeCardType);
  dart.setLibraryUri(explore_recipe.RecipeCardType, I[0]);
  dart.defineLazy(explore_recipe.RecipeCardType, {
    /*explore_recipe.RecipeCardType.card1*/get card1() {
      return "card1";
    },
    /*explore_recipe.RecipeCardType.card2*/get card2() {
      return "card2";
    },
    /*explore_recipe.RecipeCardType.card3*/get card3() {
      return "card3";
    }
  }, true);
  var cardType$ = dart.privateName(explore_recipe, "ExploreRecipe.cardType");
  var title$ = dart.privateName(explore_recipe, "ExploreRecipe.title");
  var subtitle$ = dart.privateName(explore_recipe, "ExploreRecipe.subtitle");
  var backgroundImage$ = dart.privateName(explore_recipe, "ExploreRecipe.backgroundImage");
  var backgroundImageSource$ = dart.privateName(explore_recipe, "ExploreRecipe.backgroundImageSource");
  var message$ = dart.privateName(explore_recipe, "ExploreRecipe.message");
  var authorName$ = dart.privateName(explore_recipe, "ExploreRecipe.authorName");
  var role$ = dart.privateName(explore_recipe, "ExploreRecipe.role");
  var profileImage$ = dart.privateName(explore_recipe, "ExploreRecipe.profileImage");
  var durationInMinutes$ = dart.privateName(explore_recipe, "ExploreRecipe.durationInMinutes");
  var dietType$ = dart.privateName(explore_recipe, "ExploreRecipe.dietType");
  var calories$ = dart.privateName(explore_recipe, "ExploreRecipe.calories");
  var tags$ = dart.privateName(explore_recipe, "ExploreRecipe.tags");
  var description$ = dart.privateName(explore_recipe, "ExploreRecipe.description");
  var source$ = dart.privateName(explore_recipe, "ExploreRecipe.source");
  var ingredients$ = dart.privateName(explore_recipe, "ExploreRecipe.ingredients");
  var instructions$ = dart.privateName(explore_recipe, "ExploreRecipe.instructions");
  explore_recipe.ExploreRecipe = class ExploreRecipe extends core.Object {
    get cardType() {
      return this[cardType$];
    }
    set cardType(value) {
      this[cardType$] = value;
    }
    get title() {
      return this[title$];
    }
    set title(value) {
      this[title$] = value;
    }
    get subtitle() {
      return this[subtitle$];
    }
    set subtitle(value) {
      this[subtitle$] = value;
    }
    get backgroundImage() {
      return this[backgroundImage$];
    }
    set backgroundImage(value) {
      this[backgroundImage$] = value;
    }
    get backgroundImageSource() {
      return this[backgroundImageSource$];
    }
    set backgroundImageSource(value) {
      this[backgroundImageSource$] = value;
    }
    get message() {
      return this[message$];
    }
    set message(value) {
      this[message$] = value;
    }
    get authorName() {
      return this[authorName$];
    }
    set authorName(value) {
      this[authorName$] = value;
    }
    get role() {
      return this[role$];
    }
    set role(value) {
      this[role$] = value;
    }
    get profileImage() {
      return this[profileImage$];
    }
    set profileImage(value) {
      this[profileImage$] = value;
    }
    get durationInMinutes() {
      return this[durationInMinutes$];
    }
    set durationInMinutes(value) {
      this[durationInMinutes$] = value;
    }
    get dietType() {
      return this[dietType$];
    }
    set dietType(value) {
      this[dietType$] = value;
    }
    get calories() {
      return this[calories$];
    }
    set calories(value) {
      this[calories$] = value;
    }
    get tags() {
      return this[tags$];
    }
    set tags(value) {
      this[tags$] = value;
    }
    get description() {
      return this[description$];
    }
    set description(value) {
      this[description$] = value;
    }
    get source() {
      return this[source$];
    }
    set source(value) {
      this[source$] = value;
    }
    get ingredients() {
      return this[ingredients$];
    }
    set ingredients(value) {
      this[ingredients$] = value;
    }
    get instructions() {
      return this[instructions$];
    }
    set instructions(value) {
      this[instructions$] = value;
    }
  };
  (explore_recipe.ExploreRecipe.new = function(opts) {
    let cardType = opts && 'cardType' in opts ? opts.cardType : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let subtitle = opts && 'subtitle' in opts ? opts.subtitle : null;
    let backgroundImage = opts && 'backgroundImage' in opts ? opts.backgroundImage : null;
    let backgroundImageSource = opts && 'backgroundImageSource' in opts ? opts.backgroundImageSource : null;
    let message = opts && 'message' in opts ? opts.message : null;
    let authorName = opts && 'authorName' in opts ? opts.authorName : null;
    let role = opts && 'role' in opts ? opts.role : null;
    let profileImage = opts && 'profileImage' in opts ? opts.profileImage : null;
    let durationInMinutes = opts && 'durationInMinutes' in opts ? opts.durationInMinutes : null;
    let dietType = opts && 'dietType' in opts ? opts.dietType : null;
    let calories = opts && 'calories' in opts ? opts.calories : null;
    let tags = opts && 'tags' in opts ? opts.tags : null;
    let description = opts && 'description' in opts ? opts.description : null;
    let source = opts && 'source' in opts ? opts.source : null;
    let ingredients = opts && 'ingredients' in opts ? opts.ingredients : null;
    let instructions = opts && 'instructions' in opts ? opts.instructions : null;
    this[cardType$] = cardType;
    this[title$] = title;
    this[subtitle$] = subtitle;
    this[backgroundImage$] = backgroundImage;
    this[backgroundImageSource$] = backgroundImageSource;
    this[message$] = message;
    this[authorName$] = authorName;
    this[role$] = role;
    this[profileImage$] = profileImage;
    this[durationInMinutes$] = durationInMinutes;
    this[dietType$] = dietType;
    this[calories$] = calories;
    this[tags$] = tags;
    this[description$] = description;
    this[source$] = source;
    this[ingredients$] = ingredients;
    this[instructions$] = instructions;
    ;
  }).prototype = explore_recipe.ExploreRecipe.prototype;
  (explore_recipe.ExploreRecipe.fromJson = function(json) {
    this[instructions$] = null;
    this[ingredients$] = null;
    this[source$] = null;
    this[description$] = null;
    this[tags$] = null;
    this[calories$] = null;
    this[dietType$] = null;
    this[durationInMinutes$] = null;
    this[profileImage$] = null;
    this[role$] = null;
    this[authorName$] = null;
    this[message$] = null;
    this[backgroundImageSource$] = null;
    this[backgroundImage$] = null;
    this[subtitle$] = null;
    this[title$] = null;
    this[cardType$] = null;
    this.cardType = T.StringL().as(json[$_get]("cardType"));
    this.title = T.StringL().as(json[$_get]("title"));
    this.subtitle = T.StringL().as(json[$_get]("subtitle"));
    this.backgroundImage = T.StringL().as(json[$_get]("backgroundImage"));
    this.backgroundImageSource = T.StringL().as(json[$_get]("backgroundImageSource"));
    this.message = T.StringL().as(json[$_get]("message"));
    this.authorName = T.StringL().as(json[$_get]("authorName"));
    this.role = T.StringL().as(json[$_get]("role"));
    this.profileImage = T.StringL().as(json[$_get]("profileImage"));
    this.durationInMinutes = T.intL().as(json[$_get]("durationInMinutes"));
    this.dietType = T.StringL().as(json[$_get]("dietType"));
    this.calories = T.intL().as(json[$_get]("calories"));
    this.tags = T.ListLOfStringL().as(dart.dgsend(json[$_get]("tags"), [T.StringL()], 'cast', []));
    this.description = T.StringL().as(json[$_get]("description"));
    this.source = T.StringL().as(json[$_get]("source"));
    if (json[$_get]("ingredients") != null) {
      this.ingredients = T.JSArrayOfIngredientsL().of([]);
      dart.dsend(json[$_get]("ingredients"), 'forEach', [dart.fn(v => {
          this.ingredients[$add](new explore_recipe.Ingredients.fromJson(T.MapLOfStringL$dynamic().as(v)));
        }, T.dynamicToNull())]);
    }
    if (json[$_get]("instructions") != null) {
      this.instructions = T.JSArrayOfInstructionL().of([]);
      dart.dsend(json[$_get]("instructions"), 'forEach', [dart.fn(v => {
          this.instructions[$add](new explore_recipe.Instruction.fromJson(T.MapLOfStringL$dynamic().as(v)));
        }, T.dynamicToNull())]);
    }
  }).prototype = explore_recipe.ExploreRecipe.prototype;
  dart.addTypeTests(explore_recipe.ExploreRecipe);
  dart.addTypeCaches(explore_recipe.ExploreRecipe);
  dart.setLibraryUri(explore_recipe.ExploreRecipe, I[0]);
  dart.setFieldSignature(explore_recipe.ExploreRecipe, () => ({
    __proto__: dart.getFields(explore_recipe.ExploreRecipe.__proto__),
    cardType: dart.fieldType(dart.legacy(core.String)),
    title: dart.fieldType(dart.legacy(core.String)),
    subtitle: dart.fieldType(dart.legacy(core.String)),
    backgroundImage: dart.fieldType(dart.legacy(core.String)),
    backgroundImageSource: dart.fieldType(dart.legacy(core.String)),
    message: dart.fieldType(dart.legacy(core.String)),
    authorName: dart.fieldType(dart.legacy(core.String)),
    role: dart.fieldType(dart.legacy(core.String)),
    profileImage: dart.fieldType(dart.legacy(core.String)),
    durationInMinutes: dart.fieldType(dart.legacy(core.int)),
    dietType: dart.fieldType(dart.legacy(core.String)),
    calories: dart.fieldType(dart.legacy(core.int)),
    tags: dart.fieldType(dart.legacy(core.List$(dart.legacy(core.String)))),
    description: dart.fieldType(dart.legacy(core.String)),
    source: dart.fieldType(dart.legacy(core.String)),
    ingredients: dart.fieldType(dart.legacy(core.List$(dart.legacy(explore_recipe.Ingredients)))),
    instructions: dart.fieldType(dart.legacy(core.List$(dart.legacy(explore_recipe.Instruction))))
  }));
  var imageUrl$ = dart.privateName(explore_recipe, "Ingredients.imageUrl");
  var title$0 = dart.privateName(explore_recipe, "Ingredients.title");
  var source$0 = dart.privateName(explore_recipe, "Ingredients.source");
  explore_recipe.Ingredients = class Ingredients extends core.Object {
    get imageUrl() {
      return this[imageUrl$];
    }
    set imageUrl(value) {
      this[imageUrl$] = value;
    }
    get title() {
      return this[title$0];
    }
    set title(value) {
      this[title$0] = value;
    }
    get source() {
      return this[source$0];
    }
    set source(value) {
      this[source$0] = value;
    }
  };
  (explore_recipe.Ingredients.new = function(opts) {
    let imageUrl = opts && 'imageUrl' in opts ? opts.imageUrl : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let source = opts && 'source' in opts ? opts.source : null;
    this[imageUrl$] = imageUrl;
    this[title$0] = title;
    this[source$0] = source;
    ;
  }).prototype = explore_recipe.Ingredients.prototype;
  (explore_recipe.Ingredients.fromJson = function(json) {
    this[source$0] = null;
    this[title$0] = null;
    this[imageUrl$] = null;
    this.imageUrl = T.StringL().as(json[$_get]("imageUrl"));
    this.title = T.StringL().as(json[$_get]("title"));
    this.source = T.StringL().as(json[$_get]("source"));
  }).prototype = explore_recipe.Ingredients.prototype;
  dart.addTypeTests(explore_recipe.Ingredients);
  dart.addTypeCaches(explore_recipe.Ingredients);
  dart.setLibraryUri(explore_recipe.Ingredients, I[0]);
  dart.setFieldSignature(explore_recipe.Ingredients, () => ({
    __proto__: dart.getFields(explore_recipe.Ingredients.__proto__),
    imageUrl: dart.fieldType(dart.legacy(core.String)),
    title: dart.fieldType(dart.legacy(core.String)),
    source: dart.fieldType(dart.legacy(core.String))
  }));
  var imageUrl$0 = dart.privateName(explore_recipe, "Instruction.imageUrl");
  var description$0 = dart.privateName(explore_recipe, "Instruction.description");
  var durationInMinutes$0 = dart.privateName(explore_recipe, "Instruction.durationInMinutes");
  explore_recipe.Instruction = class Instruction extends core.Object {
    get imageUrl() {
      return this[imageUrl$0];
    }
    set imageUrl(value) {
      this[imageUrl$0] = value;
    }
    get description() {
      return this[description$0];
    }
    set description(value) {
      this[description$0] = value;
    }
    get durationInMinutes() {
      return this[durationInMinutes$0];
    }
    set durationInMinutes(value) {
      this[durationInMinutes$0] = value;
    }
  };
  (explore_recipe.Instruction.new = function(opts) {
    let imageUrl = opts && 'imageUrl' in opts ? opts.imageUrl : null;
    let description = opts && 'description' in opts ? opts.description : null;
    let durationInMinutes = opts && 'durationInMinutes' in opts ? opts.durationInMinutes : null;
    this[imageUrl$0] = imageUrl;
    this[description$0] = description;
    this[durationInMinutes$0] = durationInMinutes;
    ;
  }).prototype = explore_recipe.Instruction.prototype;
  (explore_recipe.Instruction.fromJson = function(json) {
    let t0, t0$, t0$0;
    this[durationInMinutes$0] = null;
    this[description$0] = null;
    this[imageUrl$0] = null;
    this.imageUrl = T.StringL().as((t0 = json[$_get]("imageUrl"), t0 == null ? "" : t0));
    this.description = T.StringL().as((t0$ = json[$_get]("description"), t0$ == null ? "" : t0$));
    this.durationInMinutes = T.intL().as((t0$0 = json[$_get]("durationInMinutes"), t0$0 == null ? 0 : t0$0));
  }).prototype = explore_recipe.Instruction.prototype;
  dart.addTypeTests(explore_recipe.Instruction);
  dart.addTypeCaches(explore_recipe.Instruction);
  dart.setLibraryUri(explore_recipe.Instruction, I[0]);
  dart.setFieldSignature(explore_recipe.Instruction, () => ({
    __proto__: dart.getFields(explore_recipe.Instruction.__proto__),
    imageUrl: dart.fieldType(dart.legacy(core.String)),
    description: dart.fieldType(dart.legacy(core.String)),
    durationInMinutes: dart.fieldType(dart.legacy(core.int))
  }));
  dart.trackLibraries("packages/fooderlich/models/explore_recipe.dart", {
    "package:fooderlich/models/explore_recipe.dart": explore_recipe
  }, {
    "package:fooderlich/models/explore_recipe.dart": ["ingredient.dart", "instruction.dart"]
  }, '{"version":3,"sourceRoot":"","sources":["explore_recipe.dart","ingredient.dart","instruction.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAOA;;;;;MAHe,mCAAK;;;MACL,mCAAK;;;MACL,mCAAK;;;;;;;;;;;;;;;;;;;;;;IAIX;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACH;;;;;;IACG;;;;;;IACH;;;;;;IACS;;;;;;IACN;;;;;;IACA;;;;;;IACW;;;;;;IACA;;;;;;;;QAGR;QACD;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IAhBC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EAAc;oDAEqB;;;;;;;;;;;;;;;;;;AACf,oBAA3B,eAAW,AAAI,IAAA,QAAC;AACK,iBAArB,eAAQ,AAAI,IAAA,QAAC;AACc,oBAA3B,eAAW,AAAI,IAAA,QAAC;AACyB,2BAAzC,eAAkB,AAAI,IAAA,QAAC;AAC8B,iCAArD,eAAwB,AAAI,IAAA,QAAC;AACJ,mBAAzB,eAAU,AAAI,IAAA,QAAC;AACgB,sBAA/B,eAAa,AAAI,IAAA,QAAC;AACC,gBAAnB,eAAO,AAAI,IAAA,QAAC;AACuB,wBAAnC,eAAe,AAAI,IAAA,QAAC;AACyB,6BAA7C,YAAoB,AAAI,IAAA,QAAC;AACE,oBAA3B,eAAW,AAAI,IAAA,QAAC;AACW,oBAA3B,YAAW,AAAI,IAAA,QAAC;AACkB,gBAAlC,sBAAoB,YAAb,AAAI,IAAA,QAAC;AACqB,uBAAjC,eAAc,AAAI,IAAA,QAAC;AACI,kBAAvB,eAAS,AAAI,IAAA,QAAC;AACd,QAAI,AAAI,IAAA,QAAC;AACsB,MAA7B,mBAA2B;AAGzB,MAFkB,WAApB,AAAI,IAAA,QAAC,4BAAuB,QAAC;AACa,UAAxC,AAAY,uBAAgB,qEAAS,CAAC;;;AAG1C,QAAI,AAAI,IAAA,QAAC;AACuB,MAA9B,oBAA4B;AAG1B,MAFmB,WAArB,AAAI,IAAA,QAAC,6BAAwB,QAAC;AACa,UAAzC,AAAa,wBAAgB,qEAAS,CAAC;;;EAG7C;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICxEO;;;;;;IACA;;;;;;IACA;;;;;;;;QAEW;QAAe;QAAY;IAA3B;IAAe;IAAY;;EAAQ;kDAEX;;;;AACb,oBAA3B,eAAW,AAAI,IAAA,QAAC;AACK,iBAArB,eAAQ,AAAI,IAAA,QAAC;AACU,kBAAvB,eAAS,AAAI,IAAA,QAAC;EAChB;;;;;;;;;;;;;;ICVO;;;;;;IACA;;;;;;IACH;;;;;;;;QAEc;QAAe;QAAkB;IAAjC;IAAe;IAAkB;;EAAmB;kDAE5B;;;;;AACP,oBAAjC,gBAA4B,KAAjB,AAAI,IAAA,QAAC,aAAD,aAAgB;AACQ,uBAAvC,gBAAkC,MAApB,AAAI,IAAA,QAAC,gBAAD,cAAmB;AACa,6BAAlD,aAA8C,OAA1B,AAAI,IAAA,QAAC,sBAAD,eAAyB;EACnD","file":"../../../../packages/fooderlich/models/explore_recipe.dart.lib.js"}');
  // Exports:
  return {
    models__explore_recipe: explore_recipe
  };
}));

//# sourceMappingURL=explore_recipe.dart.lib.js.map
